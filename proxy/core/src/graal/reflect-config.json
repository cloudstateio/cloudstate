[
{
  "name":"[B"
},
{
  "name":"akka.actor.ActorCell",
  "allDeclaredFields":true
},
{
  "name":"akka.actor.ActorIdentity"
},
{
  "name":"akka.actor.ActorInitializationException"
},
{
  "name":"akka.actor.ActorKilledException"
},
{
  "name":"akka.actor.ActorRef"
},
{
  "name":"akka.actor.ActorSelectionMessage"
},
{
  "name":"akka.actor.DefaultSupervisorStrategy",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"akka.actor.Identify"
},
{
  "name":"akka.actor.IllegalActorStateException"
},
{
  "name":"akka.actor.InvalidActorNameException"
},
{
  "name":"akka.actor.InvalidMessageException"
},
{
  "name":"akka.actor.Kill$"
},
{
  "name":"akka.actor.LightArrayRevolverScheduler",
  "methods":[{"name":"<init>","parameterTypes":["com.typesafe.config.Config","akka.event.LoggingAdapter","java.util.concurrent.ThreadFactory"] }]
},
{
  "name":"akka.actor.LightArrayRevolverScheduler$TaskHolder",
  "fields":[{"name":"task"}]
},
{
  "name":"akka.actor.LocalActorRefProvider$Guardian",
  "allDeclaredFields":true,
  "allDeclaredConstructors":true
},
{
  "name":"akka.actor.LocalActorRefProvider$SystemGuardian",
  "allDeclaredFields":true,
  "allDeclaredConstructors":true
},
{
  "name":"akka.actor.LocalScope$"
},
{
  "name":"akka.actor.PoisonPill$"
},
{
  "name":"akka.actor.Props$EmptyActor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"akka.actor.RepointableActorRef",
  "fields":[
    {"name":"_cellDoNotCallMeDirectly"}, 
    {"name":"_lookupDoNotCallMeDirectly"}
  ]
},
{
  "name":"akka.actor.Status$Failure"
},
{
  "name":"akka.actor.Status$Success"
},
{
  "name":"akka.cluster.AutoDown",
  "allDeclaredFields":true,
  "allDeclaredConstructors":true
},
{
  "name":"akka.cluster.AutoDownBase",
  "allDeclaredFields":true
},
{
  "name":"akka.cluster.AutoDowning",
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ActorSystem"] }]
},
{
  "name":"akka.cluster.ClusterActorRefProvider",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","akka.actor.ActorSystem$Settings","akka.event.EventStream","akka.actor.DynamicAccess"] }]
},
{
  "name":"akka.cluster.ClusterCoreDaemon",
  "allDeclaredFields":true,
  "allDeclaredConstructors":true
},
{
  "name":"akka.cluster.ClusterCoreSupervisor",
  "allDeclaredFields":true,
  "allDeclaredConstructors":true
},
{
  "name":"akka.cluster.ClusterDaemon",
  "allDeclaredFields":true,
  "allDeclaredConstructors":true
},
{
  "name":"akka.cluster.ClusterDomainEventPublisher",
  "allDeclaredFields":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"akka.cluster.ClusterHeartbeatReceiver",
  "allDeclaredFields":true,
  "methods":[{"name":"<init>","parameterTypes":["scala.Function0"] }]
},
{
  "name":"akka.cluster.ClusterHeartbeatSender",
  "allDeclaredFields":true
},
{
  "name":"akka.cluster.ClusterMessage"
},
{
  "name":"akka.cluster.ClusterReadView$$anon$1",
  "allDeclaredFields":true
},
{
  "name":"akka.cluster.ClusterRemoteWatcher",
  "allDeclaredFields":true,
  "allDeclaredConstructors":true
},
{
  "name":"akka.cluster.CoordinatedShutdownLeave",
  "allDeclaredFields":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"akka.cluster.CrossDcHeartbeatSender",
  "allDeclaredFields":true
},
{
  "name":"akka.cluster.JoinConfigCompatCheckCluster",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"akka.cluster.OnMemberStatusChangedListener",
  "fields" : [
      { "name" : "context", "allowWrite" : true },
      { "name" : "self", "allowWrite" : true }
    ],
  "allDeclaredFields":true,
  "allDeclaredConstructors":true
},
{
  "name":"akka.cluster.client.ClusterClientMessage"
},
{
  "name":"akka.cluster.client.protobuf.ClusterClientMessageSerializer",
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ExtendedActorSystem"] }]
},
{
  "name":"akka.cluster.ddata.ReplicatedDataSerialization"
},
{
  "name":"akka.cluster.ddata.Replicator",
  "allDeclaredFields":true
},
{
  "name":"akka.cluster.ddata.Replicator$ReplicatorMessage"
},
{
  "name":"akka.cluster.ddata.protobuf.ReplicatedDataSerializer",
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ExtendedActorSystem"] }]
},
{
  "name":"akka.cluster.ddata.protobuf.ReplicatorMessageSerializer",
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ExtendedActorSystem"] }]
},
{
  "name":"akka.cluster.protobuf.ClusterMessageSerializer",
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ExtendedActorSystem"] }]
},
{
  "name":"akka.cluster.pubsub.DistributedPubSubMediator$Internal$SendToOneSubscriber"
},
{
  "name":"akka.cluster.pubsub.DistributedPubSubMessage"
},
{
  "name":"akka.cluster.pubsub.protobuf.DistributedPubSubMessageSerializer",
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ExtendedActorSystem"] }]
},
{
  "name":"akka.cluster.routing.ClusterRouterPool"
},
{
  "name":"akka.cluster.sharding.ClusterShardingGuardian",
  "allDeclaredFields":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"akka.cluster.sharding.ClusterShardingSerializable"
},
{
  "name":"akka.cluster.sharding.DDataShardCoordinator",
  "allDeclaredFields":true
},
{
  "name":"akka.cluster.sharding.JoinConfigCompatCheckSharding",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"akka.cluster.sharding.Shard",
  "allDeclaredFields":true
},
{
  "name":"akka.cluster.sharding.ShardCoordinator",
  "allDeclaredFields":true
},
{
  "name":"akka.cluster.sharding.ShardCoordinator$RebalanceWorker",
  "allDeclaredFields":true
},
{
  "name":"akka.cluster.sharding.ShardRegion",
  "allDeclaredFields":true
},
{
  "name":"akka.cluster.sharding.ShardRegion$HandOffStopper",
  "allDeclaredFields":true
},
{
  "name":"akka.cluster.sharding.protobuf.ClusterShardingMessageSerializer",
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ExtendedActorSystem"] }]
},
{
  "name":"akka.cluster.singleton.ClusterSingletonManager",
  "allDeclaredFields":true
},
{
  "name":"akka.cluster.singleton.ClusterSingletonManager$Internal$OldestChangedBuffer",
  "allDeclaredFields":true,
  "allDeclaredConstructors":true
},
{
  "name":"akka.cluster.singleton.ClusterSingletonMessage"
},
{
  "name":"akka.cluster.singleton.ClusterSingletonProxy",
  "allDeclaredFields":true
},
{
  "name":"akka.cluster.singleton.protobuf.ClusterSingletonMessageSerializer",
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ExtendedActorSystem"] }]
},
{
  "name":"akka.dispatch.AbstractNodeQueue",
  "fields":[{"name":"_tailDoNotCallMeDirectly"}]
},
{
  "name":"akka.dispatch.AbstractNodeQueue$Node",
  "fields":[{"name":"_nextDoNotCallMeDirectly"}]
},
{
  "name":"akka.dispatch.BoundedControlAwareMessageQueueSemantics"
},
{
  "name":"akka.dispatch.BoundedDequeBasedMessageQueueSemantics"
},
{
  "name":"akka.dispatch.BoundedMessageQueueSemantics"
},
{
  "name":"akka.dispatch.ControlAwareMessageQueueSemantics"
},
{
  "name":"akka.dispatch.DequeBasedMessageQueueSemantics"
},
{
  "name":"akka.dispatch.Mailbox",
  "fields":[
    {"name":"_statusDoNotCallMeDirectly"}, 
    {"name":"_systemQueueDoNotCallMeDirectly"}
  ]
},
{
  "name":"akka.dispatch.MessageDispatcher",
  "fields":[
    {"name":"_inhabitantsDoNotCallMeDirectly"}, 
    {"name":"_shutdownScheduleDoNotCallMeDirectly"}
  ]
},
{
  "name":"akka.dispatch.MultipleConsumerSemantics"
},
{
  "name":"akka.dispatch.UnboundedControlAwareMessageQueueSemantics"
},
{
  "name":"akka.dispatch.UnboundedDequeBasedMailbox",
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ActorSystem$Settings","com.typesafe.config.Config"] }]
},
{
  "name":"akka.dispatch.UnboundedDequeBasedMessageQueueSemantics"
},
{
  "name":"akka.dispatch.UnboundedMailbox",
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ActorSystem$Settings","com.typesafe.config.Config"] }]
},
{
  "name":"akka.dispatch.UnboundedMessageQueueSemantics"
},
{
  "name":"akka.dispatch.forkjoin.ForkJoinPool",
  "fields":[
    {"name":"ctl"}, 
    {"name":"indexSeed"}, 
    {"name":"plock"}, 
    {"name":"stealCount"}
  ]
},
{
  "name":"akka.dispatch.forkjoin.ForkJoinPool$WorkQueue",
  "fields":[{"name":"qlock"}]
},
{
  "name":"akka.dispatch.forkjoin.ForkJoinTask",
  "fields":[{"name":"status"}]
},
{
  "name":"akka.dispatch.sysmsg.SystemMessage"
},
{
  "name":"akka.event.DeadLetterListener",
  "allDeclaredFields":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"akka.event.EventStreamUnsubscriber",
  "allDeclaredFields":true,
  "allDeclaredConstructors":true
},
{
  "name":"akka.event.LoggerMailboxType",
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ActorSystem$Settings","com.typesafe.config.Config"] }]
},
{
  "name":"akka.event.LoggerMessageQueueSemantics"
},
{
  "name":"akka.event.slf4j.Slf4jLogger",
  "allDeclaredFields":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"akka.event.slf4j.Slf4jLoggingFilter",
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ActorSystem$Settings","akka.event.EventStream"] }]
},
{
  "name":"akka.http.impl.engine.client.PoolMasterActor",
  "allDeclaredFields":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"akka.http.scaladsl.Http2",
  "methods":[{"name":"get","parameterTypes":["akka.actor.ActorSystem"] }]
},
{
  "name":"akka.http.scaladsl.Http2Ext",
  "methods":[{"name":"bindAndHandleAsync","parameterTypes":["scala.Function1","java.lang.String","int","akka.http.scaladsl.ConnectionContext","akka.http.scaladsl.settings.ServerSettings","int","akka.event.LoggingAdapter","akka.stream.Materializer"] }]
},
{
  "name":"akka.io.SelectionHandler",
  "allDeclaredFields":true,
  "allDeclaredConstructors":true
},
{
  "name":"akka.io.SelectionHandler$SelectorBasedManager",
  "allDeclaredFields":true
},
{
  "name":"akka.io.TcpConnection",
  "allDeclaredFields":true
},
{
  "name":"akka.io.TcpIncomingConnection",
  "allDeclaredFields":true,
  "allDeclaredConstructors":true
},
{
  "name":"akka.io.TcpListener",
  "allDeclaredFields":true,
  "allDeclaredConstructors":true
},
{
  "name":"akka.io.TcpManager",
  "allDeclaredFields":true,
  "allDeclaredConstructors":true
},
{
  "name":"akka.pattern.CircuitBreaker",
  "fields":[
    {"name":"_currentResetTimeoutDoNotCallMeDirectly"}, 
    {"name":"_currentStateDoNotCallMeDirectly"}
  ]
},
{
  "name":"akka.pattern.PromiseActorRef",
  "fields":[
    {"name":"_stateDoNotCallMeDirectly"}, 
    {"name":"_watchedByDoNotCallMeDirectly"}
  ]
},
{
  "name":"akka.pattern.internal.BackoffOnRestartSupervisor",
  "allDeclaredFields":true
},
{
  "name":"akka.pattern.internal.BackoffOnStopSupervisor",
  "allDeclaredFields":true
},
{
  "name":"akka.persistence.RecoveryPermitter",
  "allDeclaredFields":true
},
{
  "name":"akka.persistence.journal.ReplayFilter",
  "fields" : [
      { "name" : "context", "allowWrite" : true },
      { "name" : "self", "allowWrite" : true }
    ],
  "allDeclaredFields":true
},
{
  "name":"akka.persistence.journal.AsyncWriteJournal$Resequencer",
  "allDeclaredFields":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"akka.persistence.journal.inmem.InmemJournal",
  "allDeclaredFields":true,
  "allDeclaredConstructors":true
},
{
  "name":"akka.persistence.serialization.Message"
},
{
  "name":"akka.persistence.serialization.MessageSerializer",
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ExtendedActorSystem"] }]
},
{
  "name":"akka.persistence.serialization.Snapshot"
},
{
  "name":"akka.persistence.serialization.SnapshotSerializer",
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ExtendedActorSystem"] }]
},
{
  "name":"akka.protobuf.GeneratedMessage"
},
{
  "name":"akka.remote.DaemonMsgCreate"
},
{
  "name":"akka.remote.RemoteActorRefProvider$RemotingTerminator",
  "allDeclaredFields":true,
  "allDeclaredConstructors":true
},
{
  "name":"akka.remote.RemoteDeploymentWatcher",
  "allDeclaredFields":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"akka.remote.RemoteScope"
},
{
  "name":"akka.remote.RemoteWatcher",
  "allDeclaredFields":true
},
{
  "name":"akka.remote.RemoteWatcher$Heartbeat$"
},
{
  "name":"akka.remote.RemoteWatcher$HeartbeatRsp"
},
{
  "name":"akka.remote.artery.ArteryMessage"
},
{
  "name":"akka.remote.routing.RemoteRouterConfig"
},
{
  "name":"akka.remote.serialization.ArteryMessageSerializer",
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ExtendedActorSystem"] }]
},
{
  "name":"akka.remote.serialization.ByteStringSerializer",
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ExtendedActorSystem"] }]
},
{
  "name":"akka.remote.serialization.DaemonMsgCreateSerializer",
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ExtendedActorSystem"] }]
},
{
  "name":"akka.remote.serialization.IntSerializer",
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ExtendedActorSystem"] }]
},
{
  "name":"akka.remote.serialization.LongSerializer",
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ExtendedActorSystem"] }]
},
{
  "name":"akka.remote.serialization.MessageContainerSerializer",
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ExtendedActorSystem"] }]
},
{
  "name":"akka.remote.serialization.MiscMessageSerializer",
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ExtendedActorSystem"] }]
},
{
  "name":"akka.remote.serialization.ProtobufSerializer",
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ExtendedActorSystem"] }]
},
{
  "name":"akka.remote.serialization.StringSerializer",
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ExtendedActorSystem"] }]
},
{
  "name":"akka.remote.serialization.SystemMessageSerializer",
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ExtendedActorSystem"] }]
},
{
  "name":"akka.routing.BalancingPool"
},
{
  "name":"akka.routing.BroadcastGroup"
},
{
  "name":"akka.routing.BroadcastPool"
},
{
  "name":"akka.routing.ConsistentHashingPool",
  "methods":[{"name":"<init>","parameterTypes":["com.typesafe.config.Config"] }]
},
{
  "name":"akka.routing.DefaultResizer"
},
{
  "name":"akka.routing.FromConfig"
},
{
  "name":"akka.routing.RandomGroup"
},
{
  "name":"akka.routing.RandomPool"
},
{
  "name":"akka.routing.RoundRobinGroup"
},
{
  "name":"akka.routing.RoundRobinPool",
  "methods":[{"name":"<init>","parameterTypes":["com.typesafe.config.Config"] }]
},
{
  "name":"akka.routing.RoutedActorCell$RouterActorCreator",
  "allDeclaredConstructors":true
},
{
  "name":"akka.routing.RouterActor",
  "allDeclaredFields":true
},
{
  "name":"akka.routing.RouterPoolActor",
  "allDeclaredFields":true
},
{
  "name":"akka.routing.ScatterGatherFirstCompletedGroup"
},
{
  "name":"akka.routing.ScatterGatherFirstCompletedPool"
},
{
  "name":"akka.routing.SmallestMailboxPool"
},
{
  "name":"akka.routing.TailChoppingGroup"
},
{
  "name":"akka.routing.TailChoppingPool"
},
{
  "name":"akka.serialization.BooleanSerializer",
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ExtendedActorSystem"] }]
},
{
  "name":"akka.serialization.ByteArraySerializer",
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ExtendedActorSystem"] }]
},
{
  "name":"akka.serialization.JavaSerializer",
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ExtendedActorSystem"] }]
},
{
  "name":"akka.serialization.SerializationExtension$",
  "fields":[{"name":"MODULE$"}]
},
{
  "name":"akka.stream.SinkRef"
},
{
  "name":"akka.stream.SourceRef"
},
{
  "name":"akka.stream.impl.ActorRefSinkActor",
  "allDeclaredFields":true
},
{
  "name":"akka.stream.impl.StreamSupervisor",
  "allDeclaredFields":true
},
{
  "name":"akka.stream.impl.fusing.ActorGraphInterpreter",
  "allDeclaredFields":true
},
{
  "name":"akka.stream.impl.streamref.StreamRefsProtocol"
},
{
  "name":"akka.stream.serialization.StreamRefSerializer",
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ExtendedActorSystem"] }]
},
{
  "name":"akka.util.ByteString$ByteString1"
},
{
  "name":"akka.util.ByteString$ByteString1C"
},
{
  "name":"akka.util.ByteString$ByteStrings"
},
{
  "name":"com.google.protobuf.DescriptorProtos$FieldOptions",
  "methods":[
    {"name":"getCtype","parameterTypes":[] }, 
    {"name":"getDeprecated","parameterTypes":[] }, 
    {"name":"getJstype","parameterTypes":[] }, 
    {"name":"getLazy","parameterTypes":[] }, 
    {"name":"getPacked","parameterTypes":[] }, 
    {"name":"getUninterpretedOption","parameterTypes":["int"] }, 
    {"name":"getUninterpretedOptionCount","parameterTypes":[] }, 
    {"name":"getUninterpretedOptionList","parameterTypes":[] }, 
    {"name":"getWeak","parameterTypes":[] }, 
    {"name":"hasCtype","parameterTypes":[] }, 
    {"name":"hasDeprecated","parameterTypes":[] }, 
    {"name":"hasJstype","parameterTypes":[] }, 
    {"name":"hasLazy","parameterTypes":[] }, 
    {"name":"hasPacked","parameterTypes":[] }, 
    {"name":"hasWeak","parameterTypes":[] }
  ]
},
{
  "name":"com.google.protobuf.DescriptorProtos$FieldOptions$Builder",
  "methods":[
    {"name":"addUninterpretedOption","parameterTypes":["com.google.protobuf.DescriptorProtos$UninterpretedOption"] }, 
    {"name":"clearCtype","parameterTypes":[] }, 
    {"name":"clearDeprecated","parameterTypes":[] }, 
    {"name":"clearJstype","parameterTypes":[] }, 
    {"name":"clearLazy","parameterTypes":[] }, 
    {"name":"clearPacked","parameterTypes":[] }, 
    {"name":"clearUninterpretedOption","parameterTypes":[] }, 
    {"name":"clearWeak","parameterTypes":[] }, 
    {"name":"getCtype","parameterTypes":[] }, 
    {"name":"getDeprecated","parameterTypes":[] }, 
    {"name":"getJstype","parameterTypes":[] }, 
    {"name":"getLazy","parameterTypes":[] }, 
    {"name":"getPacked","parameterTypes":[] }, 
    {"name":"getUninterpretedOption","parameterTypes":["int"] }, 
    {"name":"getUninterpretedOptionBuilder","parameterTypes":["int"] }, 
    {"name":"getUninterpretedOptionCount","parameterTypes":[] }, 
    {"name":"getUninterpretedOptionList","parameterTypes":[] }, 
    {"name":"getWeak","parameterTypes":[] }, 
    {"name":"hasCtype","parameterTypes":[] }, 
    {"name":"hasDeprecated","parameterTypes":[] }, 
    {"name":"hasJstype","parameterTypes":[] }, 
    {"name":"hasLazy","parameterTypes":[] }, 
    {"name":"hasPacked","parameterTypes":[] }, 
    {"name":"hasWeak","parameterTypes":[] }, 
    {"name":"setCtype","parameterTypes":["com.google.protobuf.DescriptorProtos$FieldOptions$CType"] }, 
    {"name":"setDeprecated","parameterTypes":["boolean"] }, 
    {"name":"setJstype","parameterTypes":["com.google.protobuf.DescriptorProtos$FieldOptions$JSType"] }, 
    {"name":"setLazy","parameterTypes":["boolean"] }, 
    {"name":"setPacked","parameterTypes":["boolean"] }, 
    {"name":"setUninterpretedOption","parameterTypes":["int","com.google.protobuf.DescriptorProtos$UninterpretedOption"] }, 
    {"name":"setWeak","parameterTypes":["boolean"] }
  ]
},
{
  "name":"com.google.protobuf.DescriptorProtos$FieldOptions$CType",
  "methods":[
    {"name":"getValueDescriptor","parameterTypes":[] }, 
    {"name":"valueOf","parameterTypes":["com.google.protobuf.Descriptors$EnumValueDescriptor"] }
  ]
},
{
  "name":"com.google.protobuf.DescriptorProtos$FieldOptions$JSType",
  "methods":[
    {"name":"getValueDescriptor","parameterTypes":[] }, 
    {"name":"valueOf","parameterTypes":["com.google.protobuf.Descriptors$EnumValueDescriptor"] }
  ]
},
{
  "name":"com.google.protobuf.DescriptorProtos$MethodOptions",
  "methods":[
    {"name":"getDeprecated","parameterTypes":[] }, 
    {"name":"getIdempotencyLevel","parameterTypes":[] }, 
    {"name":"getUninterpretedOption","parameterTypes":["int"] }, 
    {"name":"getUninterpretedOptionCount","parameterTypes":[] }, 
    {"name":"getUninterpretedOptionList","parameterTypes":[] }, 
    {"name":"hasDeprecated","parameterTypes":[] }, 
    {"name":"hasIdempotencyLevel","parameterTypes":[] }
  ]
},
{
  "name":"com.google.protobuf.DescriptorProtos$MethodOptions$Builder",
  "methods":[
    {"name":"addUninterpretedOption","parameterTypes":["com.google.protobuf.DescriptorProtos$UninterpretedOption"] }, 
    {"name":"clearDeprecated","parameterTypes":[] }, 
    {"name":"clearIdempotencyLevel","parameterTypes":[] }, 
    {"name":"clearUninterpretedOption","parameterTypes":[] }, 
    {"name":"getDeprecated","parameterTypes":[] }, 
    {"name":"getIdempotencyLevel","parameterTypes":[] }, 
    {"name":"getUninterpretedOption","parameterTypes":["int"] }, 
    {"name":"getUninterpretedOptionBuilder","parameterTypes":["int"] }, 
    {"name":"getUninterpretedOptionCount","parameterTypes":[] }, 
    {"name":"getUninterpretedOptionList","parameterTypes":[] }, 
    {"name":"hasDeprecated","parameterTypes":[] }, 
    {"name":"hasIdempotencyLevel","parameterTypes":[] }, 
    {"name":"setDeprecated","parameterTypes":["boolean"] }, 
    {"name":"setIdempotencyLevel","parameterTypes":["com.google.protobuf.DescriptorProtos$MethodOptions$IdempotencyLevel"] }, 
    {"name":"setUninterpretedOption","parameterTypes":["int","com.google.protobuf.DescriptorProtos$UninterpretedOption"] }
  ]
},
{
  "name":"com.google.protobuf.DescriptorProtos$MethodOptions$IdempotencyLevel",
  "methods":[
    {"name":"getValueDescriptor","parameterTypes":[] }, 
    {"name":"valueOf","parameterTypes":["com.google.protobuf.Descriptors$EnumValueDescriptor"] }
  ]
},
{
  "name":"com.google.protobuf.DescriptorProtos$UninterpretedOption",
  "methods":[{"name":"newBuilder","parameterTypes":[] }]
},
{
  "name":"com.google.protobuf.Extension"
},
{
  "name":"com.google.protobuf.ExtensionRegistry",
  "methods":[{"name":"getEmptyRegistry","parameterTypes":[] }]
},
{
  "name":"com.google.protobuf.GeneratedMessage"
},
{
  "name":"com.google.protobuf.ListValue",
  "methods":[
    {"name":"getValues","parameterTypes":["int"] }, 
    {"name":"getValuesCount","parameterTypes":[] }, 
    {"name":"getValuesList","parameterTypes":[] }, 
    {"name":"newBuilder","parameterTypes":[] }
  ]
},
{
  "name":"com.google.protobuf.ListValue$Builder",
  "methods":[
    {"name":"addValues","parameterTypes":["com.google.protobuf.Value"] }, 
    {"name":"clearValues","parameterTypes":[] }, 
    {"name":"getValues","parameterTypes":["int"] }, 
    {"name":"getValuesBuilder","parameterTypes":["int"] }, 
    {"name":"getValuesCount","parameterTypes":[] }, 
    {"name":"getValuesList","parameterTypes":[] }, 
    {"name":"setValues","parameterTypes":["int","com.google.protobuf.Value"] }
  ]
},
{
  "name":"com.google.protobuf.NullValue",
  "methods":[
    {"name":"getValueDescriptor","parameterTypes":[] }, 
    {"name":"valueOf","parameterTypes":["com.google.protobuf.Descriptors$EnumValueDescriptor"] }
  ]
},
{
  "name":"com.google.protobuf.Struct",
  "methods":[
    {"name":"getDefaultInstance","parameterTypes":[] }, 
    {"name":"newBuilder","parameterTypes":[] }
  ]
},
{
  "name":"com.google.protobuf.Value",
  "methods":[
    {"name":"getBoolValue","parameterTypes":[] }, 
    {"name":"getKindCase","parameterTypes":[] }, 
    {"name":"getListValue","parameterTypes":[] }, 
    {"name":"getNullValue","parameterTypes":[] }, 
    {"name":"getNullValueValue","parameterTypes":[] }, 
    {"name":"getNumberValue","parameterTypes":[] }, 
    {"name":"getStringValue","parameterTypes":[] }, 
    {"name":"getStringValueBytes","parameterTypes":[] }, 
    {"name":"getStructValue","parameterTypes":[] }, 
    {"name":"newBuilder","parameterTypes":[] }
  ]
},
{
  "name":"com.google.protobuf.Value$Builder",
  "methods":[
    {"name":"clearBoolValue","parameterTypes":[] }, 
    {"name":"clearKind","parameterTypes":[] }, 
    {"name":"clearListValue","parameterTypes":[] }, 
    {"name":"clearNullValue","parameterTypes":[] }, 
    {"name":"clearNumberValue","parameterTypes":[] }, 
    {"name":"clearStringValue","parameterTypes":[] }, 
    {"name":"clearStructValue","parameterTypes":[] }, 
    {"name":"getBoolValue","parameterTypes":[] }, 
    {"name":"getKindCase","parameterTypes":[] }, 
    {"name":"getListValue","parameterTypes":[] }, 
    {"name":"getListValueBuilder","parameterTypes":[] }, 
    {"name":"getNullValue","parameterTypes":[] }, 
    {"name":"getNullValueValue","parameterTypes":[] }, 
    {"name":"getNumberValue","parameterTypes":[] }, 
    {"name":"getStringValue","parameterTypes":[] }, 
    {"name":"getStringValueBytes","parameterTypes":[] }, 
    {"name":"getStructValue","parameterTypes":[] }, 
    {"name":"getStructValueBuilder","parameterTypes":[] }, 
    {"name":"setBoolValue","parameterTypes":["boolean"] }, 
    {"name":"setListValue","parameterTypes":["com.google.protobuf.ListValue"] }, 
    {"name":"setNullValue","parameterTypes":["com.google.protobuf.NullValue"] }, 
    {"name":"setNullValueValue","parameterTypes":["int"] }, 
    {"name":"setNumberValue","parameterTypes":["double"] }, 
    {"name":"setStringValue","parameterTypes":["java.lang.String"] }, 
    {"name":"setStringValueBytes","parameterTypes":["com.google.protobuf.ByteString"] }, 
    {"name":"setStructValue","parameterTypes":["com.google.protobuf.Struct"] }
  ]
},
{
  "name":"com.typesafe.config.Config"
},
{
  "name":"com.typesafe.config.impl.SimpleConfig"
},
{
  "name":"com.typesafe.sslconfig.ssl.DefaultHostnameVerifier",
  "methods":[{"name":"<init>","parameterTypes":["com.typesafe.sslconfig.util.LoggerFactory"] }]
},
{
  "name":"io.cloudstate.proxy.ConcurrencyEnforcer",
  "allDeclaredFields":true
},
{
  "name":"io.cloudstate.proxy.EntityDiscoveryManager",
  "allDeclaredFields":true
},
{
  "name":"io.cloudstate.proxy.StatsCollector",
  "allDeclaredFields":true
},
{
  "name":"io.cloudstate.proxy.Warmup",
  "allDeclaredFields":true
},
{
  "name":"io.cloudstate.proxy.autoscaler.Autoscaler",
  "allDeclaredFields":true
},
{
  "name":"io.cloudstate.proxy.autoscaler.NoScaler",
  "allDeclaredFields":true
},
{
  "name":"io.cloudstate.proxy.crdt.CrdtEntity",
  "fields" : [
    { "name" : "context", "allowWrite" : true },
    { "name" : "self", "allowWrite" : true }
  ],
  "allDeclaredFields":true
},
{
  "name":"io.cloudstate.proxy.eventsourced.EventSourcedEntity",
  "fields" : [
      { "name" : "context", "allowWrite" : true },
      { "name" : "self", "allowWrite" : true }
    ],
  "allDeclaredFields":true
},
{
  "name":"io.cloudstate.proxy.eventsourced.EventSourcedEntitySupervisor",
  "allDeclaredFields":true
},
{
  "name":"io.cloudstate.proxy.eventsourced.InMemSnapshotStore",
  "allDeclaredFields":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.grpc.internal.DnsNameResolverProvider"
},
{
  "name":"io.grpc.internal.JndiResourceResolverFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.grpc.internal.PickFirstLoadBalancerProvider"
},
{
  "name":"io.grpc.netty.shaded.io.grpc.netty.AbstractNettyHandler",
  "methods":[
    {"name":"channelActive","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }
  ]
},
{
  "name":"io.grpc.netty.shaded.io.grpc.netty.NettyClientHandler",
  "methods":[
    {"name":"channelInactive","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"close","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","io.grpc.netty.shaded.io.netty.channel.ChannelPromise"] }, 
    {"name":"write","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","java.lang.Object","io.grpc.netty.shaded.io.netty.channel.ChannelPromise"] }
  ]
},
{
  "name":"io.grpc.netty.shaded.io.grpc.netty.ProtocolNegotiators$GrpcNegotiationHandler",
  "methods":[{"name":"userEventTriggered","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"io.grpc.netty.shaded.io.grpc.netty.ProtocolNegotiators$WaitUntilActiveHandler",
  "methods":[
    {"name":"channelActive","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"userEventTriggered","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","java.lang.Object"] }
  ]
},
{
  "name":"io.grpc.netty.shaded.io.grpc.netty.WriteBufferingAndExceptionHandler",
  "methods":[
    {"name":"channelInactive","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"close","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","io.grpc.netty.shaded.io.netty.channel.ChannelPromise"] }, 
    {"name":"connect","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.grpc.netty.shaded.io.netty.channel.ChannelPromise"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, 
    {"name":"flush","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"write","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","java.lang.Object","io.grpc.netty.shaded.io.netty.channel.ChannelPromise"] }
  ]
},
{
  "name":"io.grpc.netty.shaded.io.netty.buffer.AbstractByteBufAllocator",
  "allDeclaredMethods":true
},
{
  "name":"io.grpc.netty.shaded.io.netty.buffer.AbstractReferenceCountedByteBuf",
  "fields":[{"name":"refCnt"}]
},
{
  "name":"io.grpc.netty.shaded.io.netty.channel.ChannelDuplexHandler",
  "methods":[
    {"name":"bind","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.grpc.netty.shaded.io.netty.channel.ChannelPromise"] }, 
    {"name":"deregister","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","io.grpc.netty.shaded.io.netty.channel.ChannelPromise"] }, 
    {"name":"disconnect","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","io.grpc.netty.shaded.io.netty.channel.ChannelPromise"] }, 
    {"name":"read","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext"] }
  ]
},
{
  "name":"io.grpc.netty.shaded.io.netty.channel.ChannelInboundHandlerAdapter",
  "methods":[
    {"name":"channelActive","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelInactive","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRegistered","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelUnregistered","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelWritabilityChanged","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, 
    {"name":"userEventTriggered","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","java.lang.Object"] }
  ]
},
{
  "name":"io.grpc.netty.shaded.io.netty.channel.DefaultChannelPipeline$HeadContext",
  "methods":[
    {"name":"bind","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.grpc.netty.shaded.io.netty.channel.ChannelPromise"] }, 
    {"name":"channelActive","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelInactive","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRegistered","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelUnregistered","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelWritabilityChanged","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"close","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","io.grpc.netty.shaded.io.netty.channel.ChannelPromise"] }, 
    {"name":"connect","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.grpc.netty.shaded.io.netty.channel.ChannelPromise"] }, 
    {"name":"deregister","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","io.grpc.netty.shaded.io.netty.channel.ChannelPromise"] }, 
    {"name":"disconnect","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","io.grpc.netty.shaded.io.netty.channel.ChannelPromise"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, 
    {"name":"flush","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"read","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"userEventTriggered","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"write","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","java.lang.Object","io.grpc.netty.shaded.io.netty.channel.ChannelPromise"] }
  ]
},
{
  "name":"io.grpc.netty.shaded.io.netty.channel.DefaultChannelPipeline$TailContext",
  "methods":[
    {"name":"channelActive","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelInactive","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRegistered","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelUnregistered","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelWritabilityChanged","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, 
    {"name":"userEventTriggered","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","java.lang.Object"] }
  ]
},
{
  "name":"io.grpc.netty.shaded.io.netty.channel.epoll.Epoll",
  "methods":[
    {"name":"isAvailable","parameterTypes":[] }, 
    {"name":"unavailabilityCause","parameterTypes":[] }
  ]
},
{
  "name":"io.grpc.netty.shaded.io.netty.channel.socket.nio.NioSocketChannel",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.grpc.netty.shaded.io.netty.handler.codec.ByteToMessageDecoder",
  "methods":[
    {"name":"channelRead","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"userEventTriggered","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","java.lang.Object"] }
  ]
},
{
  "name":"io.grpc.netty.shaded.io.netty.handler.codec.http2.Http2ConnectionHandler",
  "methods":[
    {"name":"bind","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.grpc.netty.shaded.io.netty.channel.ChannelPromise"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelWritabilityChanged","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"connect","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.grpc.netty.shaded.io.netty.channel.ChannelPromise"] }, 
    {"name":"deregister","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","io.grpc.netty.shaded.io.netty.channel.ChannelPromise"] }, 
    {"name":"disconnect","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext","io.grpc.netty.shaded.io.netty.channel.ChannelPromise"] }, 
    {"name":"flush","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"read","parameterTypes":["io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext"] }
  ]
},
{
  "name":"io.grpc.netty.shaded.io.netty.util.ReferenceCountUtil",
  "allDeclaredMethods":true
},
{
  "name":"io.grpc.netty.shaded.io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields",
  "fields":[{"name":"producerLimit"}]
},
{
  "name":"io.grpc.netty.shaded.io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields",
  "fields":[{"name":"consumerIndex"}]
},
{
  "name":"io.grpc.netty.shaded.io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields",
  "fields":[{"name":"producerIndex"}]
},
{
  "name":"io.grpc.netty.shaded.io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueConsumerIndexField",
  "fields":[{"name":"consumerIndex"}]
},
{
  "name":"io.grpc.netty.shaded.io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerIndexField",
  "fields":[{"name":"producerIndex"}]
},
{
  "name":"io.grpc.netty.shaded.io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerLimitField",
  "fields":[{"name":"producerLimit"}]
},
{
  "name":"io.grpc.util.SecretRoundRobinLoadBalancerProvider$Provider"
},
{
  "name":"java.io.Serializable"
},
{
  "name":"java.lang.Integer"
},
{
  "name":"java.lang.Long"
},
{
  "name":"java.lang.String",
  "fields":[{"name":"value"}]
},
{
  "name":"java.lang.Thread",
  "fields":[{"name":"parkBlocker"}]
},
{
  "name":"java.lang.Throwable"
},
{
  "name":"java.lang.management.ManagementFactory",
  "methods":[{"name":"getRuntimeMXBean","parameterTypes":[] }]
},
{
  "name":"java.lang.management.RuntimeMXBean",
  "methods":[{"name":"getName","parameterTypes":[] }]
},
{
  "name":"java.net.InetSocketAddress",
  "methods":[{"name":"getHostString","parameterTypes":[] }]
},
{
  "name":"java.nio.Bits",
  "methods":[{"name":"unaligned","parameterTypes":[] }]
},
{
  "name":"java.nio.Buffer",
  "fields":[{"name":"address"}]
},
{
  "name":"java.nio.DirectByteBuffer",
  "fields":[{"name":"cleaner"}],
  "methods":[{"name":"<init>","parameterTypes":["long","int"] }]
},
{
  "name":"java.util.Optional"
},
{
  "name":"java.util.concurrent.atomic.LongAdder",
  "allPublicConstructors":true,
  "methods":[
    {"name":"add","parameterTypes":["long"] }, 
    {"name":"sum","parameterTypes":[] }
  ]
},
{
  "name":"org.agrona.concurrent.AbstractConcurrentArrayQueueConsumer",
  "fields":[{"name":"head"}]
},
{
  "name":"org.agrona.concurrent.AbstractConcurrentArrayQueueProducer",
  "fields":[
    {"name":"sharedHeadCache"}, 
    {"name":"tail"}
  ]
},
{
  "name":"scala.Int"
},
{
  "name":"scala.Long"
},
{
  "name":"scala.None$"
},
{
  "name":"scala.Some"
},
{
  "name":"scala.concurrent.Future$InternalCallbackExecutor$",
  "fields":[{"name":"MODULE$"}]
},
{
  "name":"scalapb.GeneratedMessage"
},
{
  "name":"sun.misc.Cleaner",
  "methods":[{"name":"clean","parameterTypes":[] }]
},
{
  "name":"sun.misc.Unsafe",
  "allDeclaredFields":true,
  "methods":[
    {"name":"arrayBaseOffset","parameterTypes":["java.lang.Class"] }, 
    {"name":"arrayIndexScale","parameterTypes":["java.lang.Class"] }, 
    {"name":"copyMemory","parameterTypes":["long","long","long"] }, 
    {"name":"copyMemory","parameterTypes":["java.lang.Object","long","java.lang.Object","long","long"] }, 
    {"name":"getAndSetObject","parameterTypes":["java.lang.Object","long","java.lang.Object"] }, 
    {"name":"getBoolean","parameterTypes":["java.lang.Object","long"] }, 
    {"name":"getByte","parameterTypes":["long"] }, 
    {"name":"getByte","parameterTypes":["java.lang.Object","long"] }, 
    {"name":"getDouble","parameterTypes":["java.lang.Object","long"] }, 
    {"name":"getFloat","parameterTypes":["java.lang.Object","long"] }, 
    {"name":"getInt","parameterTypes":["long"] }, 
    {"name":"getInt","parameterTypes":["java.lang.Object","long"] }, 
    {"name":"getLong","parameterTypes":["long"] }, 
    {"name":"getLong","parameterTypes":["java.lang.Object","long"] }, 
    {"name":"getObject","parameterTypes":["java.lang.Object","long"] }, 
    {"name":"objectFieldOffset","parameterTypes":["java.lang.reflect.Field"] }, 
    {"name":"putBoolean","parameterTypes":["java.lang.Object","long","boolean"] }, 
    {"name":"putByte","parameterTypes":["long","byte"] }, 
    {"name":"putByte","parameterTypes":["java.lang.Object","long","byte"] }, 
    {"name":"putDouble","parameterTypes":["java.lang.Object","long","double"] }, 
    {"name":"putFloat","parameterTypes":["java.lang.Object","long","float"] }, 
    {"name":"putInt","parameterTypes":["long","int"] }, 
    {"name":"putInt","parameterTypes":["java.lang.Object","long","int"] }, 
    {"name":"putLong","parameterTypes":["long","long"] }, 
    {"name":"putLong","parameterTypes":["java.lang.Object","long","long"] }, 
    {"name":"putObject","parameterTypes":["java.lang.Object","long","java.lang.Object"] }
  ]
},
{
  "name":"sun.misc.VM",
  "methods":[{"name":"maxDirectMemory","parameterTypes":[] }]
},
{
  "name":"sun.nio.ch.SelectorImpl",
  "fields":[
    {"name":"publicSelectedKeys"}, 
    {"name":"selectedKeys"}
  ]
},
{
  "name":"sun.reflect.Reflection",
  "methods":[{"name":"getCallerClass","parameterTypes":["int"] }]
},
{
  "name":"io.cloudstate.proxy.HealthCheckReady",
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ActorSystem"] }]
},
{
  "name":"io.cloudstate.proxy.HealthCheckLive",
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ActorSystem"] }]
},
{
  "name":"io.cloudstate.proxy.crdt.CrdtSerializers",
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ExtendedActorSystem"]}]
},
{
  "name":"io.cloudstate.proxy.crdt.Vote"
},
{
  "name":"io.cloudstate.proxy.entity.UserFunctionCommand",
  "allPublicMethods": true
},
{
  "name":"io.cloudstate.proxy.entity.EntityCommand",
  "allPublicMethods": true
},
{
  "name":"io.cloudstate.proxy.entity.UserFunctionReply",
  "allPublicMethods": true
},
{
  "name":"io.cloudstate.proxy.autoscaler.AutoscalerMetrics",
  "allPublicMethods": true
},
{
  "name":"io.cloudstate.proxy.autoscaler.Stable",
  "allPublicMethods": true
},
{
  "name":"io.cloudstate.proxy.autoscaler.Upgrading",
  "allPublicMethods": true
},
{
  "name":"io.cloudstate.proxy.autoscaler.ScalingUp",
  "allPublicMethods": true
},
{
  "name":"io.cloudstate.proxy.autoscaler.ScalingDown",
  "allPublicMethods": true
}
]
