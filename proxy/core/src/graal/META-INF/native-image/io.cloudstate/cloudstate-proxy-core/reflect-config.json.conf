[
{
  name: "io.cloudstate.proxy.autoscaler.KubernetesDeploymentScaler$Metadata"
  allDeclaredFields: true
  allPublicMethods: true
  allPublicConstructors: true
}
{
  name: "io.cloudstate.proxy.autoscaler.KubernetesDeploymentScaler$ScaleSpec"
  allDeclaredFields: true
  allPublicMethods: true
  allPublicConstructors: true
}
{
  name: "io.cloudstate.proxy.autoscaler.KubernetesDeploymentScaler$ScaleStatus"
  allDeclaredFields: true
  allPublicMethods: true
  allPublicConstructors: true
}
{
  name: "io.cloudstate.proxy.autoscaler.KubernetesDeploymentScaler$Scale"
  allDeclaredFields: true
  allPublicMethods: true
  allPublicConstructors: true
}
{
  name: "io.cloudstate.proxy.autoscaler.KubernetesDeploymentScaler$DeploymentCondition"
  allDeclaredFields: true
  allPublicMethods: true
  allPublicConstructors: true
}
{
  name: "io.cloudstate.proxy.autoscaler.KubernetesDeploymentScaler$DeploymentStatus"
  allDeclaredFields: true
  allPublicMethods: true
  allPublicConstructors: true
}
{
  name: "io.cloudstate.proxy.autoscaler.KubernetesDeploymentScaler$DeploymentSpec"
  allDeclaredFields: true
  allPublicMethods: true
  allPublicConstructors: true
}
{
  name: "io.cloudstate.proxy.autoscaler.KubernetesDeploymentScaler$Deployment"
  allDeclaredFields: true
  allPublicMethods: true
  allPublicConstructors: true
}
{
  name: "io.cloudstate.proxy.autoscaler.KubernetesDeploymentScaler$DeploymentList"
  allDeclaredFields: true
  allPublicMethods: true
  allPublicConstructors: true
}
{
  name: "io.cloudstate.proxy.eventsourced.EventSourcedEntitySupervisor"
  allDeclaredFields: true
}
{
  name: "io.cloudstate.proxy.eventsourced.InMemSnapshotStore"
  allDeclaredFields: true
  allDeclaredConstructors: true
}
{
  name: "io.cloudstate.proxy.valueentity.store.InMemoryStore"
  allDeclaredConstructors: true
}
{
  name: "io.cloudstate.proxy.Warmup"
}
{
  name: "io.cloudstate.proxy.autoscaler.Autoscaler"
  allDeclaredFields: true
}
{
  name: "io.cloudstate.proxy.autoscaler.NoScaler"
}
{
  name: "io.cloudstate.proxy.HealthCheckReady"
  methods: [{name: "<init>", parameterTypes: ["akka.actor.ActorSystem"]}]
}
{
  name: "io.cloudstate.proxy.HealthCheckLive"
  methods: [{name: "<init>", parameterTypes: ["akka.actor.ActorSystem"]}]
}
{
  name: "io.cloudstate.proxy.crdt.Vote"
}
{
  name: "io.cloudstate.proxy.entity.UserFunctionCommand"
  allPublicMethods: true
}
{
  name: "io.cloudstate.proxy.entity.EntityCommand"
  allPublicMethods: true
}
{
  name: "io.cloudstate.proxy.entity.UserFunctionReply"
  allPublicMethods: true
}
{
  name: "io.cloudstate.proxy.autoscaler.Stable"
  allPublicMethods: true
}
{
  name: "io.cloudstate.proxy.autoscaler.Upgrading"
  allPublicMethods: true
}
{
  name: "io.cloudstate.proxy.autoscaler.ScalingUp"
  allPublicMethods: true
}
{
  name: "io.cloudstate.proxy.autoscaler.ScalingDown"
  allPublicMethods: true
}
]
