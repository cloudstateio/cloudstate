[
{
  name:  "akka.remote.PhiAccrualFailureDetector"
  methods:  [{name: "<init>", parameterTypes: ["com.typesafe.config.Config", "akka.event.EventStream"]}]
}
{
  name: "akka.remote.DaemonMsgCreate"
}
{
  name: "akka.remote.RemoteActorRefProvider$RemotingTerminator"
  allDeclaredFields: true
  allDeclaredConstructors: true
}
{
  name: "akka.remote.RemoteWatcher$Heartbeat$"
}
{
  name: "akka.remote.RemoteScope"
}
{
  name: "akka.remote.RemoteWatcher"
}
{
  name: "akka.remote.RemoteWatcher$Heartbeat$"
}
{
  name: "akka.remote.RemoteWatcher$HeartbeatRsp"
}
{
  name: "akka.remote.artery.ArteryMessage"
}
{
  name: "akka.remote.routing.RemoteRouterConfig"
}
{
  name: "akka.remote.serialization.StringSerializer"
  allDeclaredConstructors: true
}
{
  name: "akka.remote.serialization.MessageContainerSerializer"
  allDeclaredConstructors: true
}
{
  name: "akka.remote.serialization.ByteStringSerializer"
  allDeclaredConstructors: true
}
{
  name: "akka.remote.serialization.ProtobufSerializer"
  allDeclaredConstructors: true
}
{
  name: "akka.remote.serialization.ArteryMessageSerializer"
  allDeclaredConstructors: true
}
{
  name: "akka.remote.serialization.SystemMessageSerializer"
  allDeclaredConstructors: true
}
{
  name: "akka.remote.serialization.DaemonMsgCreateSerializer"
  allDeclaredConstructors: true
}
{
  name: "akka.remote.serialization.LongSerializer"
  allDeclaredConstructors: true
}
{
  name: "akka.remote.serialization.MiscMessageSerializer"
  allDeclaredConstructors: true
}
{
  name: "akka.remote.serialization.IntSerializer"
  allDeclaredConstructors: true
}
{
  name: "akka.remote.serialization.ThrowableNotSerializableException"
}
{
  name: "akka.remote.UniqueAddress"
}

]
