// Copyright 2019 Lightbend Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Extension for specifying which field in a message is to be considered an
// entity key, for the purposes associating gRPC calls with entities and
// sharding.

syntax = "proto3";

package cloudstate.proxy;

import "scalapb/scalapb.proto";

option java_package = "io.cloudstate.proxy";

// CRDT types
message Stable {
    option (scalapb.message).extends = "io.cloudstate.proxy.autoscaler.AutoscalerState";
}

message ScalingUp {
    option (scalapb.message).extends = "io.cloudstate.proxy.autoscaler.AutoscalerState";
    int32 desired = 1;
    double last_stable_request_rate_per_node = 2;
    int64 wall_clock_deadline_millis = 3;
}

message ScalingDown {
    option (scalapb.message).extends = "io.cloudstate.proxy.autoscaler.AutoscalerState";
    int32 desired = 1;
    int64 wall_clock_deadline_millis = 2;
}

message Upgrading {
    option (scalapb.message).extends = "io.cloudstate.proxy.autoscaler.AutoscalerState";
    int32 desired = 1;
    double last_stable_request_rate_per_node = 2;
}

// Stats sent by nodes
message AutoscalerMetrics {
    string address = 1;
    int64 unique_address_long_id = 2;
    int64 metric_interval_nanos = 3;
    double request_concurrency = 4;
    int64 request_time_nanos = 5;
    int32 request_count = 6;
    double user_function_concurrency = 7;
    int64 user_function_time_nanos = 8;
    int32 user_function_count = 9;
    double database_concurrency = 10;
    int64 database_time_nanos = 11;
    int32 database_count = 12;
}
