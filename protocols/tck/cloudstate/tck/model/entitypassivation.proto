// Copyright 2019 Lightbend Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//
// == Cloudstate TCK model test for passivation ==
//

syntax = "proto3";

package cloudstate.tck.model.entitypassivation;

import "cloudstate/entity_key.proto";

option java_package = "io.cloudstate.tck.model.entitypassivation";
option go_package = "github.com/cloudstateio/go-support/tck/entitypassivation;entitypassivation";

//
// The `PassivationTckModel` service should be implemented in the following ways:
//
// - The entity persistence-id must be `entity-passivation-tck-model`.
// - The passivation timeout must be set to a duration of 2 seconds or 2000 millis.
// - The state of the entity is a string and has the value "state".
// - The command handler does nothing and must return a `Response` with the state.
// - The `Persisted` message is just used for the command context.
// - The `Activate` method receives a `Request` message for activating the entity.
// - The `Activate` method must reply with the state in a `Response`.
//
service PassivationTckModel {
  rpc Activate(Request) returns (Response);
}

//
// A `Request` message for activating the entity.
//
message Request {
  string id = 1 [(.cloudstate.entity_key) = true];
}

//
// The `Response` message for the `Activate` must contain the current state.
//
message Response {
  string message = 1;
}

//
// The `Persisted` message wraps the state value. It is just used for the command context.
//
message Persisted {
  string value = 1;
}
